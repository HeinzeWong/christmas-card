{"version":3,"sources":["component/StyleEditor.jsx","component/TextEditor.jsx","constant.js","App.js","util/index.js","serviceWorker.js","index.js"],"names":["StyleEditor","ReactDOM","findDOMNode","this","scrollTop","className","props","content","dangerouslySetInnerHTML","__html","style","React","Component","TextEditor","id","nickName","message","split","card","App","interval","state","styleContent","cardContent","isMarked","name","reg","RegExp","r","window","location","search","substr","match","unescape","getUrlParam","item","messageConstant","find","formMessage","showStyleProgressively","showCardProgressively","setState","msg","Promise","resolve","setInterval","length","clearInterval","nextStr","shift","marked","Boolean","hostname","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6TAMqBA,E,6LAEjBC,IAASC,YAAYC,MAAMC,UAAY,M,+BAGvC,OAAO,yBAAKC,UAAU,eACpB,6BACE,kBAAC,YAAD,CAAWA,UAAU,gBAAgBF,KAAKG,MAAMC,UAElD,yBAAKF,UAAU,QAAQG,wBAAyB,CAAEC,OAAO,UAAD,OAAYN,KAAKG,MAAMI,MAAvB,oB,GATrBC,IAAMC,WCJ1BC,E,iLAEjB,OAAO,yBAAKR,UAAU,gBACpB,6BACE,0BAAMG,wBAAyB,CAAEC,OAAQN,KAAKG,MAAMC,iB,GAJpBI,IAAMC,WCF9C,IA+Ce,GACb,CACEE,GAAI,IACJC,SAAU,eACVC,QAAS,CACP,qjDAQEC,MAAM,IACR,wHACEA,MAAM,IACR,8vBA4BGA,MAAM,KAEXC,KAAM,sKAIJD,MAAM,MCzFSE,G,iNACnBH,QAAU,G,EACVE,KAAO,G,EACPE,SAAW,G,EACXC,MAAQ,CACNC,aAAc,GACdC,YAAa,GACbC,UAAU,G,6EAIV,IAAMV,ECnBH,SAAqBW,GAE1B,IAAIC,EAAM,IAAIC,OAAO,QAAUF,EAAO,iBAElCG,EAAIC,OAAOC,SAASC,OAAOC,OAAO,GAAGC,MAAMP,GAE/C,OAAS,MAALE,EACKM,SAASN,EAAE,IAEX,KDUIO,CAAY,MACjBC,EAAOC,EAAgBC,MAAK,SAAAF,GAAI,OAAIA,EAAKtB,KAAOA,KACtD,GAAKsB,EAAL,CAHY,IAIJpB,EAAkBoB,EAAlBpB,QAASE,EAASkB,EAATlB,KACjBf,KAAKa,QAAUA,EACfb,KAAKe,KAAOA,K,mHAIZf,KAAKoC,c,mBACCpC,KAAKqC,uBAAuBrC,KAAKa,QAAQ,K,iCACzCb,KAAKsC,sBAAsBtC,KAAKe,O,iCAChCf,KAAKqC,uBAAuBrC,KAAKa,QAAQ,K,mBAC/Cb,K,KAAc,CACZqB,UAAU,G,oBACHrB,KAAKqC,uBAAuBrC,KAAKa,QAAQ,K,yBAF7C0B,S,oHAKgBC,GAAM,IAAD,OAC1B,OAAO,IAAIC,SAAQ,SAAAC,GACjB,IAAMzB,EAAW0B,aAAY,WAC3B,IAAKH,EAAII,OAGP,OAFAC,cAAc5B,QACdyB,IAGF,IAAMI,EAAUN,EAAIO,QACd5B,EAAiB,EAAKD,MAAtBC,aACN,EAAKoB,SAAS,CACZpB,aAAcA,EAAe2B,MAE9B,EAAK7B,e,4CAIUuB,GAAM,IAAD,OACzB,OAAO,IAAIC,SAAQ,SAAAC,GACjB,IAAMzB,EAAW0B,aAAY,WAC3B,IAAKH,EAAII,OAGP,OAFAC,cAAc5B,QACdyB,IAGF,IAAMI,EAAUN,EAAIO,QACd3B,EAAgB,EAAKF,MAArBE,YACN,EAAKmB,SAAS,CACZnB,YAAaA,EAAc0B,MAE5B,EAAK7B,e,+BAKV,OACE,yBAAKf,UAAU,OACb,kBAAC,EAAD,CACEE,QAASJ,KAAKkB,MAAMC,aACpBZ,MAAK,iBAAYP,KAAKkB,MAAMC,aAAvB,cAEP,kBAAC,EAAD,CAAYf,QAASJ,KAAKkB,MAAMG,SAAW2B,IAAOhD,KAAKkB,MAAME,aAAepB,KAAKkB,MAAME,mB,GAtE9DZ,IAAMC,YEInBwC,QACW,cAA7BvB,OAAOC,SAASuB,UAEe,UAA7BxB,OAAOC,SAASuB,UAEhBxB,OAAOC,SAASuB,SAASpB,MACvB,2DCZNhC,IAASqD,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1ecaa472.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Prism from \"prismjs\";\nimport { PrismCode } from \"react-prism\";\n\n\nexport default class StyleEditor extends React.Component {\n  componentDidUpdate() {\n    ReactDOM.findDOMNode(this).scrollTop = 10000;\n  }\n  render() {\n    return <div className=\"styleEditor\">\n      <pre>\n        <PrismCode className=\"language-css\">{this.props.content}</PrismCode>\n      </pre>\n      <div className=\"style\" dangerouslySetInnerHTML={{ __html: `<style>${this.props.style}</style>` }}></div>\n    </div>;\n  }\n}\n","import React from \"react\";\n\nexport default class TextEditor extends React.Component {\n  render() {\n    return <div className=\"resumeEditor\">\n      <pre>\n        <code dangerouslySetInnerHTML={{ __html: this.props.content }}></code>\n      </pre>\n    </div>\n  }\n}\n","const defaultText = `\n/* 首先给所有元素加上过渡效果 */\n* {\n  transition: all .3s;\n}\n/* 白色背景太单调了，我们来点背景 */\nhtml {\n  color: rgb(222,222,222); \n  background: rgb(0,43,54);\n}\n/* 文字离边框太近了 */\n.styleEditor {\n  padding: .5em;\n  border: 1px solid;\n  margin: .5em;\n  overflow: auto;\n  width: 45vw; height: 90vh;\n}\n/* 代码高亮 */\n.token.selector{ color: rgb(133,153,0); }\n.token.property{ color: rgb(187,137,0); }\n.token.punctuation{ color: yellow; }\n.token.function{ color: rgb(42,161,152); }\n/* 加点 3D 效果呗 */\nhtml{\n  perspective: 1000px;\n}\n.styleEditor {\n  position: fixed; left: 0; top: 0;\n  -webkit-transition: none;\n  transition: none;\n  -webkit-transform: rotateY(10deg) translateZ(-100px) ;\n          transform: rotateY(10deg) translateZ(-100px) ;\n}\n/* 接下来我给自己准备一个编辑器 */\n.resumeEditor{\n  position: fixed; right: 0; top: 0;\n  padding: .5em;  margin: .5em;\n  width: 48vw; height: 90vh;\n  border: 1px solid;\n  background: white; color: #222;\n  overflow: auto;\n}\n/* 好了，我开始写贺卡了 */\n\n`;\n\nexport default [\n  {\n    id: \"1\",\n    nickName: \"阿翔\",\n    message: [\n      (\n        `/*\n  * Inspired by http://strml.net/\n  * 大家好，我是甜甜圈\n  * 许久不见了，甚是想念\n  * 临近圣诞，给你们送个贺卡吧！\n  */\n ` + defaultText\n      ).split(\"\"),\n      `/* emmm，这个贺卡好像着实有点太朴素（丑）\n      `.split(\"\"),\n      `/* 再对 HTML 加点样式吧 */\n      .resumeEditor{\n        padding: 2em;\n      }\n      .resumeEditor h2{\n        display: inline-block;\n        border-bottom: 1px solid;\n        margin: 1em 0 .5em;\n      }\n      .resumeEditor ul,.resumeEditor ol{\n        list-style: none;\n      }\n      .resumeEditor ul> li::before{\n        content: '•';\n        margin-right: .5em;\n      }\n      .resumeEditor ol {\n        counter-reset: section;\n      }\n      .resumeEditor ol li::before {\n        counter-increment: section;\n        content: counters(section, \".\") \" \";\n        margin-right: .5em;\n      }\n      .resumeEditor blockquote {\n        margin: 1em;\n        padding: .5em;\n        background: #ddd;\n      }`.split(\"\")\n    ],\n    card: `\n    Merry Christmas\n----\n* 送你一瓶酒，祝你早日找到与你共饮一杯的妹子\n    `.split(\"\")\n  }\n];\n","import React from \"react\";\nimport marked from \"marked\";\nimport StyleEditor from \"./component/StyleEditor\";\nimport TextEditor from \"./component/TextEditor\";\nimport { getUrlParam } from \"./util\";\nimport messageConstant from \"./constant\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  message = \"\";\n  card = \"\";\n  interval = 50;\n  state = {\n    styleContent: \"\",\n    cardContent: \"\",\n    isMarked: false\n  };\n\n  formMessage() {\n    const id = getUrlParam(\"id\");\n    const item = messageConstant.find(item => item.id === id);\n    if (!item) return;\n    const { message, card } = item;\n    this.message = message;\n    this.card = card;\n  }\n\n  async componentDidMount() {\n    this.formMessage();\n    await this.showStyleProgressively(this.message[0]);\n    await this.showCardProgressively(this.card);\n    await this.showStyleProgressively(this.message[1]);\n    this.setState({\n      isMarked: true\n    }, await this.showStyleProgressively(this.message[2]))\n  }\n\n  showStyleProgressively(msg) {\n    return new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (!msg.length) {\n          clearInterval(interval);\n          resolve();\n          return;\n        }\n        const nextStr = msg.shift();\n        let { styleContent } = this.state;\n        this.setState({\n          styleContent: styleContent + nextStr\n        });\n      }, this.interval);\n    });\n  }\n\n  showCardProgressively(msg) {\n    return new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (!msg.length) {\n          clearInterval(interval);\n          resolve();\n          return;\n        }\n        const nextStr = msg.shift();\n        let { cardContent } = this.state;\n        this.setState({\n          cardContent: cardContent + nextStr\n        });\n      }, this.interval);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <StyleEditor\n          content={this.state.styleContent}\n          style={`<style>${this.state.styleContent}</style>`}\n        />\n        <TextEditor content={this.state.isMarked ? marked(this.state.cardContent) : this.state.cardContent} />\n      </div>\n    );\n  }\n}\n","export function getUrlParam(name) {\n  //构造一个含有目标参数的正则表达式对象\n  var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n  //匹配目标参数\n  var r = window.location.search.substr(1).match(reg);\n  //返回参数\n  if (r != null) {\n    return unescape(r[2]);\n  } else {\n    return null;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}